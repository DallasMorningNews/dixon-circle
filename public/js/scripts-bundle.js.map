{"version":3,"sources":["+custom.js"],"names":["$","document","ready","viewVignette","chapter","target","dixonCh","find","children","eq","addClass","siblings","removeClass","targetStory","offset","top","window","scrollTop","animate","expandMap","hasClass","drawMap","locations","map","addSource","type","data","addLayer","id","source","paint","circle-radius","stops","circle-color","circle-opacity","property","animateMap","location","zoom","duration","pitch","easeTo","center","updateLoc","visibleLocs","windowTop","windowHeight","height","windowBottom","each","this","push","attr","l","length","currentLoc","undefined","features","geometry","coordinates","properties","originalLoc","d","Date","year","getFullYear","text","click","e","preventDefault","fadeOut","storyItem","index","closest","parent","scroll","mapboxgl","supported","console","log","number","head","lng","lat","opacity","GeoJSON","parse","Point","include","accessToken","Map","container","style","on","scrollZoom","disable","addControl","Navigation","_","throttle"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\t////////////////////////////////////////////////\n\t///// GETTING PAST THE SPLASH SCREEN ///////////\n\t////////////////////////////////////////////////\n\n\t$(\"#readMore\").click(function(e) {\n\t\te.preventDefault();\n\t\t$(\"#splash\").fadeOut(500);\n\t\t$(\"body\").removeClass(\"noScroll\");\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// VIEWING STORIES WITHIN SECTIONS //////////\n\t////////////////////////////////////////////////\n\n\tvar storyItem = $(\".dixonStories ul li\");\n\n\tstoryItem.click(function() {\n\n\t\tvar target = $(this).index();\n\n\t\tvar chapter = $(this).closest(\".dixonSection\").attr(\"id\");\n\n\t\tviewVignette(chapter, target);\n\n\t});\n\n\t$(\".next\").click(function() {\n\t\tvar chapter = $(this).closest(\".dixonSection\").attr(\"id\");\n\t\tvar target = $(this).parent(\".dixonStory\").index();\n\t\tviewVignette(chapter, target);\n\t});\n\n\tfunction viewVignette(chapter, target) {\n\t\tvar dixonCh = $(\"#\" + chapter);\n\n\t\tdixonCh.find(\"ul\").children(\"li\").eq(target).addClass(\"activeItem\").siblings(\"li\").removeClass(\"activeItem\");\n\t\tdixonCh.find(\".dixonStory\").addClass(\"noShow\").eq(target).removeClass(\"noShow\");\n\n\t\tvar targetStory = dixonCh.find(\".dixonStory\").eq(target);\n\n\t\tif (targetStory.offset().top <= $(window).scrollTop() ) {\n\t\t\t$(\"html, body\").animate({\n\t\t\t\tscrollTop: (targetStory.offset().top - 80) + \"px\"\n\t\t\t}, 250);\n\t\t}\n\t}\n\n\n\t////////////////////////////////////////////////\n\t///// WINDOW SCROLLING FUNCTIONS ///////////////\n\t////////////////////////////////////////////////\n\n\n\t$(window).scroll(function() {\n\n\t\tvar top = $(window).scrollTop();\n\n\t\t// animate our reset and zoom controls based on if the black bar has scrolled out of view\n\t\tif (top > 52) {\n\t\t\t$(\"#mapReset\").addClass(\"moved\");\n\t\t\t$(\".mapboxgl-ctrl-top-right\").addClass(\"moved\");\n\t\t\t$(\"#mapExpander\").addClass(\"moved\");\n\t\t} else {\n\t\t\t$(\"#mapReset\").removeClass(\"moved\");\n\t\t\t$(\".mapboxgl-ctrl-top-right\").removeClass(\"moved\");\n\t\t\t$(\"#mapExpander\").removeClass(\"moved\");\n\t\t}\n\n\n\t\t//animate in our subchapter navigation to stay fixed at the top in each chapter\n\t\tvar dixonContent = $(\".dixonContent\");\n\n\t\t$.each($(\".dixonContent\"), function() {\n\t\t\tif (($(this).offset().top + 60) < top && ($(this).offset().top + $(this).height()) > (top + 50)) {\n\t\t\t\t$(this).find($(\"ul\")).addClass(\"stuck\");\n\t\t\t} else {\n\t\t\t\t$(this).find($(\"ul\")).removeClass(\"stuck\");\n\t\t\t}\n\t\t});\n\n\t});\n\n\n\n\t//////////////////////////////////////////////////////\n\t///// CONTROLLING MAP VIEWING ON SMALLER SCREENS /////\n\t//////////////////////////////////////////////////////\n\n\t// functions that control expanding the map on smaller screen sizes\n\tfunction expandMap() {\n\t\tif ($(\"#map\").hasClass(\"viewable\") === true) {\n\t\t\t$(\"#map\").removeClass(\"viewable\");\n\t\t\t$(\"#mapExpander\").removeClass(\"fa-times\").addClass(\"fa-map-marker\");\n\t\t} else {\n\t\t\t$(\"#map\").addClass(\"viewable\");\n\t\t\t$(\"#mapExpander\").removeClass(\"fa-map-marker\").addClass(\"fa-times\");\n\t\t}\n\t}\n\n\t// clicking the map expander icon in the upper right or the view map buttons\n\t// triggers hiding or showing the map\n\n\t$(\"#mapExpander\").click(function() {\n\t\texpandMap();\n\t});\n\n\t$(\".mapper\").click(function() {\n\t\texpandMap();\n\t});\n\n\n\n\t////////////////////////////////////////////////\n\t///// CHECKING IF WEBGL IS SUPPORTED ///////////\n\t////////////////////////////////////////////////\n\n\tif (!mapboxgl.supported()) {\n\t\tconsole.log(\"MapBox GL not supported\");\n\t} else {\n\t\tconsole.log(\"Yay, maps!\");\n\t}\n\n\n\t////////////////////////////////////////////////\n\t///// MAP SETUP ////////////////////////////////\n\t////////////////////////////////////////////////\n\n\tvar originalLoc = [-96.7371063,32.7628376];\n\n\tvar locations = [\n\t\t{number: \"1\", head: \"Dixon Circle\", lng: -96.73251, lat: 32.76531, zoom: 17, opacity: 1},\n\t\t{number: \"2\", head: \"The Corner\", lng: -96.73539, lat: 32.76385, zoom: 17, opacity: 1},\n\t\t{number: \"3\", head: \"The Killing\", lng: -96.73318, lat: 32.76324, zoom: 17, opacity: 1},\n\t\t{number: \"4\", head: \"The People\", lng: -96.73413, lat: 32.76522, zoom: 17, opacity: 1},\n\t\t{number: \"5\", head: \"The Police\", lng: -96.7371063, lat: 32.7628376, zoom: 15, opacity: 0},\n\t\t{number: \"6\", head: \"The Kid Who Got Out\", lng: -96.7369, lat: 32.76185, zoom: 17, opacity: 1},\n\t\t{number: \"7\", head: \"Freddieâ€™s Last Bust\", lng: -96.73487, lat: 32.76461, zoom: 17, opacity: 1},\n\t\t{number: \"8\", head: \"The example\", lng: -96.7371063, lat: 32.7628376, zoom: 15, opacity: 0}\n\t];\n\n\tlocations = GeoJSON.parse(locations, {Point: ['lat', 'lng'], include: ['number', 'head', 'zoom', 'opacity']});\n\n\tmapboxgl.accessToken = 'pk.eyJ1IjoibWFjbWFuIiwiYSI6ImVEbmNmZjAifQ.zVzy9cyjNT1tMYOTex51HQ';\n\n\n\t// defining the map and it's starting parameters\n\tvar map = new mapboxgl.Map({\n\t\tcontainer: 'map',\n\t\tstyle: 'mapbox://styles/mapbox/satellite-streets-v9',\n\t\tcenter: originalLoc,\n\t\tzoom: 15\n\t});\n\n\t// once the map has loaded, disable scroll zooming and add a zoom navigation\n\t// then draw the map using our location data\n\tmap.on(\"load\", function() {\n\t\tmap.scrollZoom.disable();\n\t\tmap.addControl(new mapboxgl.Navigation());\n\n\t\tdrawMap(locations);\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// MAP DRAWING //////////////////////////////\n\t////////////////////////////////////////////////\n\n\tfunction drawMap(locations) {\n\n\t\t// adding the data source\n\t\tmap.addSource(\"locations\", {\n\t\t\ttype: \"geojson\",\n\t\t\tdata: locations\n\t\t});\n\n\t\t// adding the data layer\n\t\tmap.addLayer({\n\t\t\t\"id\": \"dixonCircle\",\n\t\t\t\"source\": \"locations\",\n\t\t\t\"type\": \"circle\",\n\t\t\t\"paint\": {\n\t\t\t\t\"circle-radius\": {\n\t\t\t\t\tstops: [[1, 10], [8, 10], [16, 9]]\n\t\t\t\t},\n\t\t\t\t\"circle-color\": \"#FBD44B\",\n\t\t\t\t\"circle-opacity\": {\n\t\t\t\t\t\"property\": \"opacity\",\n\t\t\t\t\t\"stops\": [\n\t\t\t\t\t\t[0, 0], [1, 1]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\n\t////////////////////////////////////////////////\n\t///// MAP ANIMATING ////////////////////////////\n\t////////////////////////////////////////////////\n\n\t// function to animate the map, handling locaiton, zoom, duration and pitch\n\tfunction animateMap(location, zoom, duration, pitch) {\n\t\tmap.easeTo({\n\t\t\tcenter: location,\n\t\t\tzoom: zoom,\n\t\t\tduration: duration,\n\t\t\tpitch: pitch\n\t\t});\n\t}\n\n\n\t// reseting the map to it's original orientation with a click of the reset button\n\t$(\"#mapReset\").on(\"click\", function() {\n\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\tcurrentLoc = \"\";\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// UPDATING THE MAP POSITION ////////////////\n\t////////////////////////////////////////////////\n\n\t// as we scroll through our content, we're going to animate the map center\n\t// location to correspoinding features within our content\n\n\t// variable set up. we need an array of ids for all the locaitons that have passed the\n\t// bottom of the screen, and a variable to hold the current visible location\n\tvar visibleLocs = [];\n\tvar currentLoc;\n\n\tfunction updateLoc() {\n\n\t\t// empty the visible locations array\n\t\tvisibleLocs = [];\n\n\n\t\t// set our window dimension variables\n\t\tvar windowTop = $(window).scrollTop();\n\t\tvar windowHeight = $(window).height();\n\t\tvar windowBottom = windowHeight + windowTop;\n\n\t\t// for each location section, if it's visible (i.e., above the windowBottom), push\n\t\t// that section's id to the visibleLocs array\n\t\t$.each($(\".dixonMap\"), function() {\n\t\t\tif (windowBottom > $(this).offset().top + ($(window).height() / 2)) {\n\t\t\t\tvisibleLocs.push($(this).attr(\"id\"));\n\t\t\t}\n\t\t});\n\n\n\t\t// now, if everything goes right, the last id in the array is the card\n\t\t// closest to the bottom of the screen\n\n\t\t// find out how many locations we're dealing with so we can grab the last one\n\t\tvar l = visibleLocs.length;\n\n\t\t// if the last location in the visible array isn't the same as our current location\n\t\t// grab that locations lat and long and zoom the map\n\n\t\tif (visibleLocs[l-1] !== currentLoc && visibleLocs[l-1] !== undefined) {\n\n\t\t\t// position the map\n\t\t\tanimateMap(locations.features[l-1].geometry.coordinates, locations.features[l-1].properties.zoom, 750, 0);\n\n\t\t\t// set the current location to the last visible location\n\t\t\tcurrentLoc = visibleLocs[l-1];\n\n\t\t// else, if visibleLocs is empty zoom the map back to the original view\n\n\t\t} else if (visibleLocs[l-1] === undefined) {\n\t\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\t\tcurrentLoc = \"\";\n\t\t}\n\n\t\t// if we get all the way to the end, and the credits div scrolls into view,\n\t\t// recenter and zoom the map to it's starting lat, long and zoom\n\t\tif (windowBottom > $(\".credits\").offset().top) {\n\t\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\t\tcurrentLoc = \"\";\n\t\t}\n\n\t}\n\n\t// throttle the updateLoc function to run every 600 milliseconds\n\t$(window).on(\"scroll\", _.throttle(updateLoc, 600));\n\n\n\n});\n"],"sourceRoot":"/source/"}