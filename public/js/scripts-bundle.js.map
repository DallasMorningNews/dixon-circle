{"version":3,"sources":["+custom.js"],"names":["$","document","ready","drawMap","locations","map","addSource","type","data","addLayer","id","source","paint","circle-radius","stops","circle-color","circle-opacity","on","e","features","queryRenderedFeatures","point","layers","length","feature","popup","remove","mapboxgl","Popup","setLngLat","geometry","coordinates","setHTML","properties","head","addTo","animateMap","getCanvas","style","cursor","location","zoom","duration","pitch","easeTo","center","updateLoc","visibleLocs","windowTop","window","scrollTop","windowHeight","height","windowBottom","each","this","offset","top","push","attr","l","currentLoc","undefined","originalLoc","expandMap","hasClass","removeClass","addClass","viewVignette","chapter","target","dixonCh","console","log","find","children","eq","siblings","targetStory","animate","d","Date","year","getFullYear","text","number","lng","lat","GeoJSON","parse","Point","include","accessToken","Map","container","scrollZoom","disable","addControl","Navigation","_","throttle","scroll","click","storyItem","index","closest","parent"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\n\n\n\n\t// some code blocks require javascript to function, like slideshows, synopsis blocks, etc\n\t// you can find that code here: https://github.com/DallasMorningNews/generator-dmninteractives/wiki/Cookbook\n\n\tvar originalLoc = [-96.7371063,32.7628376];\n\n\tvar locations = [\n\t\t{number: \"1\", head: \"Dixon Circle\", lng: -96.73251, lat: 32.76531},\n\t\t{number: \"2\", head: \"The Corner\", lng: -96.7353, lat: 32.76378},\n\t\t{number: \"3\", head: \"The Killing\", lng: -96.73416, lat: 32.76324},\n\t\t{number: \"4\", head: \"The People\", lng: -96.73377, lat: 32.76508},\n\t\t{number: \"5\", head: \"The Police\", lng: -96.7348, lat: 32.76468},\n\t\t{number: \"6\", head: \"The Kid Who Got Out\", lng: -96.73862, lat: 32.76178},\n\t\t{number: \"7\", head: \"Freddieâ€™s Last Bust\", lng: -96.73461, lat: 32.76523}\n\t];\n\n\n\t// var locations = [\n\t// \t{number: \"1\", lng: -96.7332026, lat: 32.7651497},\n\t// \t{number: \"2\", lng: -96.7353841, lat: 32.7637329},\n\t// \t{number: \"3\", lng: -96.7342684, lat: 32.763229},\n\t// \t{number: \"4\", lng: -96.7334224, lat: 32.7643927},\n\t// \t{number: \"5\", lng: -96.7342638, lat: 32.7643172},\n\t// \t{number: \"6\", lng: -96.7385599, lat: 32.7614752},\n\t// \t{number: \"7\", lng: -96.7347115, lat: 32.7652384},\n\t// \t{number: \"8\", lng: -96.7337592, lat: 32.763672}\n\t// ];\n\n\tlocations = GeoJSON.parse(locations, {Point: ['lat', 'lng'], include: ['number', 'head']});\n\n\n\n\t////////////////////////////////////////////////\n\t///// MAP SETUP ////////////////////////////////\n\t////////////////////////////////////////////////\n\n\t// definiing our popup. We'll position, populate it with content and add it\n\t// to the map later with a click or scroll\n\tvar popup = new mapboxgl.Popup();\n\n\tmapboxgl.accessToken = 'pk.eyJ1IjoibWFjbWFuIiwiYSI6ImVEbmNmZjAifQ.zVzy9cyjNT1tMYOTex51HQ';\n\n\n\t// defining the map and it's starting parameters\n\tvar map = new mapboxgl.Map({\n\t\tcontainer: 'map',\n\t\tstyle: 'mapbox://styles/mapbox/satellite-streets-v9',\n\t\tcenter: originalLoc,\n\t\tzoom: 15\n\t});\n\n\t// once the map has loaded, disable scroll zooming and add a zoom navigation\n\t// then draw the map using our location data\n\tmap.on(\"load\", function() {\n\t\tmap.scrollZoom.disable();\n\t\tmap.addControl(new mapboxgl.Navigation());\n\n\t\tdrawMap(locations);\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// MAP DRAWING //////////////////////////////\n\t////////////////////////////////////////////////\n\n\tfunction drawMap(locations) {\n\n\t\t// adding the data source\n\t\tmap.addSource(\"locations\", {\n\t\t\ttype: \"geojson\",\n\t\t\tdata: locations\n\t\t});\n\n\t\t// adding the data layer\n\t\tmap.addLayer({\n\t\t\t\"id\": \"dixonCircle\",\n\t\t\t\"source\": \"locations\",\n\t\t\t\"type\": \"circle\",\n\t\t\t\"paint\": {\n\t\t\t\t\"circle-radius\": {\n\t\t\t\t\tstops: [[1, 10], [8, 10], [16, 9]]\n\t\t\t\t},\n\t\t\t\t\"circle-color\": \"#FBD44B\",\n\t\t\t\t\"circle-opacity\": 1\n\t\t\t}\n\t\t});\n\n\t\t// on click, populate, position and add the popup to the map,\n\t\t// then animate the map to the clicked position\n\t\tmap.on(\"click\", function(e){\n\t\t\tvar features = map.queryRenderedFeatures(e.point, {layers: ['dixonCircle']});\n\n\t\t\tif (!features.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar feature = features[0];\n\n\t\t\tpopup.remove();\n\t\t\tpopup = new mapboxgl.Popup();\n\n\t\t\tpopup.setLngLat(feature.geometry.coordinates)\n\t\t\t\t.setHTML(\"<h5 class='mapHead'>\" + feature.properties.head + \"</h5>\")\n\t\t\t\t.addTo(map);\n\n\t\t\tanimateMap(features[0].geometry.coordinates, 17, 750, 0);\n\n\t\t});\n\n\t\t// when mousing over a feature (i.e., a dot on the map), make the cursor a pointer\n\t\tmap.on('mousemove', function(e) {\n\t\t\tvar features = map.queryRenderedFeatures(e.point, {layers: ['dixonCircle']});\n\t\t\tmap.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\t\t});\n\t}\n\n\n\t////////////////////////////////////////////////\n\t///// MAP ANIMATING ////////////////////////////\n\t////////////////////////////////////////////////\n\n\t// function to animate the map, handling locaiton, zoom, duration and pitch\n\tfunction animateMap(location, zoom, duration, pitch) {\n\t\tmap.easeTo({\n\t\t\tcenter: location,\n\t\t\tzoom: zoom,\n\t\t\tduration: duration,\n\t\t\tpitch: pitch\n\t\t});\n\t}\n\n\n\t// reseting the map to it's original orientation with a click of the reset button\n\t$(\"#mapReset\").on(\"click\", function() {\n\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\tpopup.remove();\n\t\tpopup = new mapboxgl.Popup();\n\t\tcurrentLoc = \"\";\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// UPDATING THE MAP POSITION ////////////////\n\t////////////////////////////////////////////////\n\n\t// as we scroll through our content, we're going to animate the map center\n\t// location to correspoinding features within our content\n\n\t// variable set up. we need an array of ids for all the locaitons that have passed the\n\t// bottom of the screen, and a variable to hold the current visible location\n\tvar visibleLocs = [];\n\tvar currentLoc;\n\n\tfunction updateLoc() {\n\n\t\t// empty the visible locations array\n\t\tvisibleLocs = [];\n\n\n\t\t// set our window dimension variables\n\t\tvar windowTop = $(window).scrollTop();\n\t\tvar windowHeight = $(window).height();\n\t\tvar windowBottom = windowHeight + windowTop;\n\n\t\t// for each location section, if it's visible (i.e., above the windowBottom), push\n\t\t// that section's id to the visibleLocs array\n\t\t$.each($(\".dixonMap\"), function() {\n\t\t\tif (windowBottom > $(this).offset().top + 350) {\n\t\t\t\tvisibleLocs.push($(this).attr(\"id\"));\n\t\t\t}\n\t\t});\n\n\t\t// now, if everything goes right, the last id in the array is the card\n\t\t// closest to the bottom of the screen\n\n\t\t// find out how many locations we're dealing with so we can grab the last one\n\t\tvar l = visibleLocs.length;\n\n\t\t// if the last location in the visible array isn't the same as our current location\n\t\t// grab that locations lat and long and zoom the map\n\n\t\tif (visibleLocs[l-1] !== currentLoc && visibleLocs[l-1] !== undefined) {\n\n\t\t\t// position the map\n\t\t\tanimateMap(locations.features[l-1].geometry.coordinates, 17, 750, 0);\n\n\t\t\t// display the correspoinding popup for the current location\n\t\t\tpopup.setLngLat(locations.features[l-1].geometry.coordinates)\n\t\t\t\t.setHTML(\"<h5 class='mapHead'>\" + locations.features[l-1].properties.head + \"</h5>\")\n\t\t\t\t.addTo(map);\n\n\t\t\t// set the current location to the last visible location\n\t\t\tcurrentLoc = visibleLocs[l-1];\n\n\t\t// else, if visibleLocs is empty zoom the map back to the original view\n\n\t\t} else if (visibleLocs[l-1] === undefined) {\n\t\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\t\tpopup.remove();\n\t\t\tpopup = new mapboxgl.Popup();\n\t\t\tcurrentLoc = \"\";\n\t\t}\n\n\t\t// if we get all the way to the end, and the credits div scrolls into view,\n\t\t// recenter and zoom the map to it's starting lat, long and zoom\n\t\tif (windowBottom > $(\"#dixon8\").offset().top + 350) {\n\t\t\tanimateMap(originalLoc, 15, 750, 0);\n\t\t\tpopup.remove();\n\t\t\tpopup = new mapboxgl.Popup();\n\t\t}\n\n\t}\n\n\t// throttle the updateLoc function to run every 600 milliseconds\n\t$(window).on(\"scroll\", _.throttle(updateLoc, 600));\n\n\n\t$(window).scroll(function() {\n\n\t\tvar top = $(window).scrollTop();\n\n\t\t// animate our reset and zoom controls based on if the black bar has scrolled out of view\n\t\tif (top > 52) {\n\t\t\t$(\"#mapReset\").addClass(\"moved\");\n\t\t\t$(\".mapboxgl-ctrl-top-right\").addClass(\"moved\");\n\t\t\t$(\"#mapExpander\").addClass(\"moved\");\n\t\t} else {\n\t\t\t$(\"#mapReset\").removeClass(\"moved\");\n\t\t\t$(\".mapboxgl-ctrl-top-right\").removeClass(\"moved\");\n\t\t\t$(\"#mapExpander\").removeClass(\"moved\");\n\t\t}\n\n\n\n\t\t//animate in our subchapter navigation to stay fixed at the top in each chapter\n\t\tvar dixonContent = $(\".dixonContent\");\n\n\t\t$.each($(\".dixonContent\"), function() {\n\t\t\tif (($(this).offset().top + 60) < top && ($(this).offset().top + $(this).height()) > (top + 50)) {\n\t\t\t\t$(this).find($(\"ul\")).addClass(\"stuck\");\n\t\t\t} else {\n\t\t\t\t$(this).find($(\"ul\")).removeClass(\"stuck\");\n\t\t\t}\n\t\t});\n\n\n\t});\n\n\n\n\t// functions that control expanding the map on smaller screen sizes\n\tfunction expandMap() {\n\t\tif ($(\"#map\").hasClass(\"viewable\") === true) {\n\t\t\t$(\"#map\").removeClass(\"viewable\");\n\t\t\t$(\"#mapExpander\").removeClass(\"fa-times\").addClass(\"fa-map-marker\");\n\t\t} else {\n\t\t\t$(\"#map\").addClass(\"viewable\");\n\t\t\t$(\"#mapExpander\").removeClass(\"fa-map-marker\").addClass(\"fa-times\");\n\t\t}\n\t}\n\n\t$(\"#mapExpander\").click(function() {\n\t\texpandMap();\n\t});\n\n\t$(\".mapper\").click(function() {\n\t\texpandMap();\n\t});\n\n\n\t////////////////////////////////////////////////\n\t///// VIEWING STORIES WITHIN SECTIONS //////////\n\t////////////////////////////////////////////////\n\n\tvar storyItem = $(\".dixonStories ul li\");\n\n\tstoryItem.click(function() {\n\n\t\tvar target = $(this).index();\n\n\t\tvar chapter = $(this).closest(\".dixonSection\").attr(\"id\");\n\n\t\tviewVignette(chapter, target);\n\n\t});\n\n\t$(\".next\").click(function() {\n\t\tvar chapter = $(this).closest(\".dixonSection\").attr(\"id\");\n\t\tvar target = $(this).parent(\".dixonStory\").index();\n\t\tviewVignette(chapter, target);\n\t});\n\n\tfunction viewVignette(chapter, target) {\n\t\tvar dixonCh = $(\"#\" + chapter);\n\n\t\tconsole.log(dixonCh);\n\t\tdixonCh.find(\"ul\").children(\"li\").eq(target).addClass(\"activeItem\").siblings(\"li\").removeClass(\"activeItem\");\n\t\tdixonCh.find(\".dixonStory\").addClass(\"noShow\").eq(target).removeClass(\"noShow\");\n\n\t\tvar targetStory = dixonCh.find(\".dixonStory\").eq(target);\n\n\t\tif (targetStory.offset().top <= $(window).scrollTop() ) {\n\t\t\t$(\"html, body\").animate({\n\t\t\t\tscrollTop: (targetStory.offset().top - 80) + \"px\"\n\t\t\t}, 250);\n\t\t}\n\t}\n\n\n});\n"],"sourceRoot":"/source/"}